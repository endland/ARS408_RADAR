cmake_minimum_required(VERSION 3.5)
project(ars408_radar_msgs)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options()#(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)

rosidl_generate_interfaces(ars408_radar_msgs
  "msg/ClusterGeneral.msg"
  "msg/ClusterQuality.msg"
  "msg/ClusterStatus.msg"
  "msg/ObjectGeneral.msg"
  "msg/ObjectExtended.msg"
  "msg/ObjectQuality.msg"
  "msg/ObjectStatus.msg"
  "msg/RadarConfiguration.msg"
  "msg/RadarState.msg"
  "msg/VersionID.msg"
  "msg/Cluster.msg"
  "msg/Object.msg"  
  "msg/ClusterList.msg"
  "msg/ObjectList.msg"
  "msg/FilterStateCfg.msg"
  "msg/FilterCfg.msg"
  "msg/FilterStateHeader.msg"
  DEPENDENCIES builtin_interfaces std_msgs
)


# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
